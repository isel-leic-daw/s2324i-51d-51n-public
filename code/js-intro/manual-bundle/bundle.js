// add
function add(require, exports) {
    console.log("Running add.js")
    const something = 1
    // exports function add(a, b) {
    exports.add = function add(a, b) {
        return a + b
    }
}

// mulUsingAdd
function mulUsingAdd(require, exports) {
    //import {add} from './add.js'
    const {add} = require('./add.js')
    console.log("Running mulUsingAdd.js")
    const something = 2
    exports.mul = function mul(a, b) {
        let acc = 0
        for (let i = 0; i < b; ++i) {
            acc = add(acc, a)
        }
        return acc
    }
}

// app
function app(require, exports) {
    //import { add } from './add.js'
    const {add} = require('./add.js')
    const something = 3
    //import { mul } from './mulUsingAdd.js'
    const {mul} = require('./mulUsingAdd.js')
    console.log("Running app.js")
    console.log(add(1, mul(2, 3)))
}

// Code generated by the bundler

const moduleTable = {
    './add.js': add,
    './mulUsingAdd.js': mulUsingAdd,
    './app.js': app,
}

function requireImpl(name) {
    const entry = moduleTable[name]
    if(!entry) {
        throw new Error("module does not exist")
    }
    if(typeof entry === "function") {
        const exports = {}
        entry(requireImpl, exports)
        moduleTable[name] = exports
        return exports
    }
    if(typeof entry === "object") {
        return entry
    }
    throw new Error("invalid state")
} 

requireImpl('./app.js')
